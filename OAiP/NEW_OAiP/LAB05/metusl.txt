
                    ОПЕРАТОРЫ ОРГАНИЗАЦИИ ПЕРЕХОДОВ


          Рассматриваемая группа операторов позволяет организовывать вет-
      вление в программе. Часто, например, необходимо в зависимости от
      того или иного результата реализовать одну либо другую группу инструк-
      ций.
         В языке СИ для этих целей используются операторы: if(если)-else(ина-
      че),switch(переключатель) и goto(идти к).
           Рассмотрим подробнее операторы организации переходов.
      Первый из перечисленных операторов записывается в следующем виде:
         if (проверка условия) инструкция 1; else инструкция 2;

      Если при проверке условия условие окажется истинным, то выполнится
      инструкция 1, иначе выполнится инструкция 2. Если вместо одной
      инструкции необходимо выполнять несколько, то они заключаются в фи-
      гурные скобки {  }.Напомним, что каждая инструкция (в том числе и в
      фигурных скобках) оканчивается точкой с запятой ;.В результате перед
      словом else будет обязательно либо закрывающая фигурная скобка либо
      точка с запятой. Однако, в операторе if слово else может отсутствовать.
      В этом случае, если слово else отсутствует, то если условие в скоб-
      ках принимает истинное значение, то выполняется инструкций 1, а если
      условие ложно(и else отсутствует) то инструкция 1 пропускается. Таким
      образом инструкция 2 будет выполняться не всегда.
      Оператор if-else относится к разряду вложенных структур, значит в
      этом операторе тоже может встречаться оператор if-else и так далее.
         Пример:
             ......
               if (a>b)
                    printf("a больше b");
               else
                    printf("а меньше либо равно b");
              ......


           Оператор switch позволяет выбрать одну из нескольких альтернатив
       и записывается в следующем виде:
             switch (выражение)
               {case константа 1; вариант 1; break;
                ...................................
                case константа n; вариант n; break;
                default: вариант n+1; break;}

       В операторе switch вычисляется целое выражение в скобках (его иногда
       называют селектором), и его значение сравнивается со всеми константа-
       ми (константными выражениями). При совпадении выполняется соответству-
       ющий вариант (одна или несколько инструкций). Все константы в записи
       оператора должны быть различными. Вариант с ключевым словом default
       (прочие) реализуется, если ни один другой вариант не подошел(слово
       default может и отсутствовать). Если default отсутствует, а все ре-
       зультаты сравнения отрицательны, то ни один вариант не выполняется.
       Для прекращения последующих проверок после успешного выбора некоторо-
       го варианта используется оператор break, обеспечивающий немендленный
       выход из переключателя switch.
          Пример:
            .........................
            znak='*';
            switch (znak)
             { case '+': y=a+b;break;
               case '-': y=a-b;break;
               case '*': y=a*b;break;
               case '/': y=a/b;break;
               case '%': y=a%b;break;
               default:
                puts("Недопустимая операция");break;
              }
              .......................................
        Рассмотрим теперь правила выполнения безусловного перехода,
        который можно представить в следующей форме:
                     goto метка;
        Метка- это любой идентификатор. Оператор goto указывает, что вы-
        полнение программы необходимо продолжить, начиная с инструкции,
        перед которой записана метка.  В программе обязательно должна быть
        строка, где указана метка, поставлено двоеточие и записана инструк-
        ция, к которой должен выполниться переход.  Метку можно поставить
        перед любой инструкцией в той функции, где находится соответствую-
        щий оператор goto.
        Контрольные вопросы:
        1. Какие операторы переходов в Turbo C Вы знаете?
        2. Назначение операторов перехода в Turbo C?
        3. Общее описание оператора перехода if
            - c else?
            - без else?
        4. Общее описание оператора перехода switch
            - c ключевым словом default?
            - без использования ключевого слова default? 
        5. Общее описание оператора goto?
        6. Изобразите счемотично действие оператора if без использования else?
        7. Изобразите схемотично действие оператора if с использованием else?
        8. Изобразите схемотично действие оператора switch без использования
           ключевого слова default?
        9. Изобразите схемотично действие оператора switch с использованием
           ключевого слова default?
      

